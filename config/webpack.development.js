const webpack = require('webpack');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const webpackMerge = require('webpack-merge');
const baseConfig = require('./webpack.base.config.js');
const path = require('path');

module.exports = webpackMerge(baseConfig, {
  mode: 'development',
  output: {
    filename: 'js/main-[hash:8].bundle.js',
    chunkFilename: 'js/[name].[hash:8].js',
    path: path.resolve(__dirname, '../build'),
  },
  devtool: 'inline-source-map',
  devServer: {
    open: true,
    hot: true,
    contentBase: path.join(__dirname, '../build'),
    port: 5000,
  },
  module: {
    rules: [
      // "postcss" loader applies autoprefixer to our CSS.
      // "css" loader resolves paths in CSS and adds assets as dependencies.
      // "style" loader turns CSS into JS modules that inject <style> tags.
      // in development "style" loader enables hot editing of CSS.
      {
        test: /\.css$/,
        use: ['style-loader', 'css-loader'],
      },
    ],
  },
  plugins: [
    new webpack.DefinePlugin({
      'process.env.NODE_ENV': JSON.stringify('development'),
      __DEV__: true,
    }),

    new HtmlWebpackPlugin({
      template: './public/index.html',
      filename: './index.html',
      favicon: './public/favicon.ico',
      inject: true, // Inject all files that are generated by webpack, e.g. bundle.js
    }),
  ],
});
